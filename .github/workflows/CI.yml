name: CI

on: [ push, pull_request ]

env:
  RUST_BACKTRACE: full

jobs:
  style:
    name: Check Style

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: rustup update
      - run: cargo build --release
      - run: cargo fmt --manifest-path Cargo.toml --all -- --check

  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup component add clippy
      - run: cargo clippy --manifest-path Cargo.toml --all-targets --all-features -- -D warnings

  build:
    name: ${{ matrix.name }}
    needs: [ style ]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        name:
          - linux / stable
          - linux / beta

        include:
          - name: linux / stable
            os: ubuntu-latest
            rust: stable
          - name: linux / beta
            os: ubuntu-latest
            rust: beta

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Init Composer Cache # Docs: <https://git.io/JfAKn#php---composer>
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: cd tests && composer update --prefer-dist --no-progress --ansi

      - name: Test Rust
        run: cargo test --all

      - name: Build
        run: cargo build